---
export function getStaticPaths() {
  return [
    { params: { id: "1" } },
    { params: { id: "2" } },
    { params: { id: "3" } },
    { params: { id: "4" } },
    { params: { id: "5" } },
    { params: { id: "6" } },
  ];
}

const { id } = Astro.params;

import Second from "../../layouts/Second.astro";
import AllProjects from "../../util/AllProjects.json";
import StackItem from "../../components/StackItem.astro";
import { GithubIcon } from "../../util/icons.jsx";
import { FolderIcon } from "../../util/icons.jsx";

const project = AllProjects.filter((p) => p.id === Number(id))[0];
---

<Second>
  <section
    class="h-4/5 w-4/5 absolute top-0 mt-12 rounded-lg p-5"
    transition:name={`project ${id} card`}
  >
    <header class="flex justify-between items-center h-max w-full">
      <h1 class="lg:text-2xl text-md">{project.name}</h1>
      <a
        href="/projects"
        class="text-blue-600 text-sm md:text-md lg-text:md font-bold">Go back</a
      >
    </header>
    <div class="mainContainer">
      <div class="imageContainer">
        <div
          class="h-full w-full p-4 img-cont-rounded"
          style={{ borderRadius: "1rem" }}
        >
          <img
            src={project.imgPath}
            alt={`${project.name}_image`}
            class="object-contain h-full w-full"
          />
        </div>
      </div>
      <div class="descContainer flex flex-col gap-8">
        <div>
          <h2 class="text-2xl font-bold">Description</h2>
          <p class="w-full h-max flex flex-wrap">{project.description}</p>
        </div>
        <div>
          <h2 class="text-lg font-bold">Implemented technologies</h2>
          <div class="flex flex-wrap gap-2 pt-2">
            {project.tecStack.map((p) => <StackItem text={p} />)}
          </div>
        </div>
        <div>
          <h2 class="text-2xl font-bold">Number of developers</h2>
          <p class="pt-2">{project.devCount}</p>
        </div>
        <div>
          <h2 class="text-2xl font-bold">Links</h2>
          <div class="flex gap-3 pt-2">
            <button class="rounded-full relative">
              <div
                class="absolute left-0 top-0 h-full rounded-full bgHover -z-20"
                style={{ backgroundColor: "white" }}
              >
              </div>
              <a
                href={project.productionUrl}
                target="_blank"
                class="flex w-full h-full justify-center px-5 py-1 items-center rounded-full"
              >
                <FolderIcon />
              </a>
            </button>
            <button class="rounded-full relative">
              <div
                class="absolute left-0 top-0 h-full rounded-full bgHover -z-20"
                style={{ backgroundColor: "white" }}
              >
              </div>
              <a
                href={project.ghRepo}
                target="_blank"
                class="flex w-full h-full justify-center px-5 py-1 items-center rounded-full"
              >
                <GithubIcon />
              </a>
            </button>
          </div>
        </div>
      </div>
    </div>
  </section>

  <style>
    button {
      background-color: transparent;
      transition: all 0.2s ease;
      border: 2px solid white;
    }

    button:hover {
      color: black;
      border: 2px solid transparent;
    }

    button:hover .bgHover {
      right: 0;
      animation: loadingBgToRight 0.3s both;
    }

    @keyframes loadingBgToRight {
      from {
        clip-path: inset(0 100% 0 0);
      }
      to {
        clip-path: inset(0 0 0 0);
      }
    }

    section {
      left: 50%;
      transform: translateX(-50%);
      -webkit-box-shadow: 0px 0px 500px 166px rgba(0, 0, 0, 0.75);
      -moz-box-shadow: 0px 0px 500px 166px rgba(0, 0, 0, 0.75);
      box-shadow: 0px 0px 500px 166px rgba(0, 0, 0, 0.75);
      background-color: rgb(21, 21, 21);
      transition: all 1s ease-in-out;
      animation: showProjectBoardBouny 0.2s ease-in;
    }

    .mainContainer {
      display: grid;
      grid-template-columns: repeat(7, 1fr);
      height: 95%;
      max-width: 100%;
      padding: 1.5rem 0;
      gap: 2.5rem;
    }

    .imageContainer {
      grid-column-start: 1;
      grid-column-end: 4;
      width: 100%;
    }

    .img-cont-rounded {
      background-color: rgb(16, 16, 16);
      box-shadow: 0px 2px 5px 1px rgba(81, 81, 81, 0.651);
    }

    .descContainer {
      grid-column-start: 4;
      grid-column-end: 8;
      width: 100%;
      overflow-y: auto;
    }

    @keyframes showProjectBoardBouny {
      0% {
        transform: translateX(-100%);
        opacity: 0;
      }
      25% {
        transform: translateX(-85%);
        opacity: 0.2;
      }
      50% {
        transform: translateX(-65%);
        opacity: 0.5;
      }
      75% {
        transform: translateX(-85%);
        opacity: 0.8;
      }
      100% {
        opacity: 1;
        transform: translateX(-50%);
      }
    }

    @media (max-width: 768px) {
      .mainContainer {
        display: flex;
        flex-direction: column;
        width: 100%;
        height: 93%;
        overflow-y: auto;
      }
      .mainContainer .imageContainer {
        display: flex;
        justify-content: center;
      }
      .mainContainer .imageContainer div {
        width: 50%;
      }
    }
    @media (max-width: 550px) {
      .mainContainer .imageContainer div {
        width: 80%;
      }
    }
  </style>
</Second>
